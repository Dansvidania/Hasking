
==================== FINAL INTERFACE ====================
2016-12-17 22:12:32.600093 UTC

interface main@main:Main 7103
  interface hash: 076a2d970393a72419c825136936b8ce
  ABI hash: ee184d8dc7dd4488de93c8cd43878567
  export-list hash: 62690245ec5d3d1a0501fcf6e20a630b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b6cec31c6b3c6f54bd18217e5c98bd67
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.alphaNum
  Main.app
  Main.getURI
  Main.linkShorty
  Main.main
  Main.randomElement
  Main.saveURI
  Main.shortyAintUri
  Main.shortyCreated
  Main.shortyFound
  Main.shortyGen
module dependencies:
package dependencies: BoundedChan-1.0.3.0@Bound_HnqSdFZoJFd98LdPAn4J2A
                      aeson-0.11.2.1@aeson_AMGuyF0UUINIuB0toUmBgA
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.1@async_6KW2HvJitVl79PEkcYuNfl
                      attoparsec-0.13.1.0@attop_1yjqcrrFKXR3Pj5ZEzZLjx
                      auto-update-0.1.4@autou_Fnqbq5K41573zil7J3s62I base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      bytestring-lexing-0.5.0.2@bytes_GJndVD1gnJDKnVWgkxSiAA
                      case-insensitive-1.2.0.7@casei_1ItdntZZD53KutnWdXAKKi
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      exceptions-0.8.3@excep_BEih2K3eMGTE4cg5iulra8
                      fail-4.9.0.0@fail_2xB1AvdW34sDm9N3JOe33G
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9
                      http2-1.6.2@http2_6fnwTCFnMVBBRbvp7KMQVQ
                      http-date-0.0.6.1@httpd_4xy86gz8ow14nYvVyCdOAb
                      http-types-0.9.1@httpt_1m8G3CdvIpB2FzbCwKpEnT integer-gmp-1.0.0.0
                      iproute-1.7.1@iprou_9sKZgOTi0Bn864xQg9TU9v
                      lifted-base-0.2.3.8@lifte_27kQ9DytVyu5Pw2So1Igy3
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw
                      network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws
                      parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      psqueues-0.2.2.2@psque_DpbyjBBm64hEDzSlDfS35I
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP
                      regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89
                      regex-compat-0.95.1@regex_EyUO1k1s8YNJ81jSdgVW1z
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      resourcet-1.1.8.1@resou_LN8gDFaCCz6HEPkjag1EuQ
                      scientific-0.3.4.9@scien_1WVNjGUftkQ9QzH4DOM2n1
                      scotty-0.11.0@scott_0yfZNSzYLri1aPi3ZbAiAP
                      semigroups-0.18.2@semig_HJuGyhDlblx13ubsVwtcad
                      simple-sendfile-0.2.25@simpl_HkPL9dsGEXvJehTjaTDejw
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      streaming-commons-0.1.16@strea_8kc3URcKs5j5CnA95xM7pJ
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
                      vault-0.3.0.6@vault_0ZPXcEIDZ59EVFZMoaTNHZ
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1.1@wai_L3ri2dk5dBX3BZvaNcgp26
                      wai-extra-3.0.19@waiex_951rcy7VaS5EwTTbaVbMvr
                      warp-3.2.9@warp_6iWiNysQRBh83lFZZJzLLp
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
orphans: aeson-0.11.2.1@aeson_AMGuyF0UUINIuB0toUmBgA:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson_AMGuyF0UUINIuB0toUmBgA:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attop_1yjqcrrFKXR3Pj5ZEzZLjx:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attop_1yjqcrrFKXR3Pj5ZEzZLjx:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.3.1@netwo_4FL8hbDqfKm3Q9HV1QK1xw:Network.Socket
         regex-base-0.93.2@regex_47KXx9dLqeO8MNJeizLKhP:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_ClFHQvfj6rtJ1Pxo4OAy89:Text.Regex.Posix.String
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attop_1yjqcrrFKXR3Pj5ZEzZLjx:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         iproute-1.7.1@iprou_9sKZgOTi0Bn864xQg9TU9v:Data.IP.Addr
                         iproute-1.7.1@iprou_9sKZgOTi0Bn864xQg9TU9v:Data.IP.Range
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws:Network.URI
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.8.1@resou_LN8gDFaCCz6HEPkjag1EuQ:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.0@scott_0yfZNSzYLri1aPi3ZbAiAP:Web.Scotty.Internal.Types
                         semigroups-0.18.2@semig_HJuGyhDlblx13ubsVwtcad:Data.List.NonEmpty
                         semigroups-0.18.2@semig_HJuGyhDlblx13ubsVwtcad:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Char8 53a1cf100554bc244cf2a8a175681688
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Internal dfa34e211eb5d18268ce7a397234e851
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9:Database.Redis 822554b8e168a1160044918f445a1256
import  -/  hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9:Database.Redis.Commands 043bd4e2459269f86fdba91839ae720d
import  -/  hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9:Database.Redis.Core 16a692ae4226ebb0d318938bb461999f
import  -/  hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9:Database.Redis.Protocol 1bd906795ddee37cef50cf23285b6809
import  -/  hedis-0.6.10@hedis_IChu3UmnIVqG2VvSKswep9:Database.Redis.Types d53747227e42564420b61a74f0c1a8f0
import  -/  network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws:Network.URI e9397ce23e5684be06f7e50b7605389b
import  -/  random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL:System.Random 7342d23dcce4eee52b45be21357c602b
import  -/  scotty-0.11.0@scott_0yfZNSzYLri1aPi3ZbAiAP:Web.Scotty d9d99acadd1ab33e910f8d0d63d1534f
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Encoding 5656db66e8e3c257ad9eec49726f7858
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal.Lazy db6494c4824cad7721a74c27631d6fe5
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy e2826e5aef5ae133262063e72a2910d2
import  -/  transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.IO.Class 37487179a2f5eb2ea7922b911abcae56
047efdc6b35ab6cd19c20ef4b6973a0e
  $wxs :: GHC.Prim.Int# -> [GHC.Types.IO GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
c6194020e52cada195895ed58ce7522b
  alphaNum :: GHC.Base.String
  {- Unfolding: (Main.alphaNum_go 65) -}
490ac0410fa088d57a79ec2a1c3ede5b
  alphaNum_go :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,U> -}
24468bdc3d4b2097c57709fd63ddcee9
  app :: Database.Redis.Core.Connection -> Web.Scotty.ScottyM ()
  {- Arity: 1,
     Strictness: <L,U(C(U),C(C1(U)),U(U),A,U(U),U(U,U,U),A)> -}
6807f924457c8655f7ef934888bce89d
  getURI ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.IO
         (Data.Either.Either
            Database.Redis.Protocol.Reply
            (GHC.Base.Maybe Data.ByteString.Internal.ByteString))
  {- Arity: 3,
     Strictness: <L,U(C(U),C(C1(U)),U(U),A,U(U),U(U,U,U),A)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getURI1
                  `cast`
                (<Database.Redis.Core.Connection>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Either.Either
                                  Database.Redis.Protocol.Reply
                                  (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_R)) -}
3086ea8781eaba61750dc549b02c5b5b
  getURI1 ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply
            (GHC.Base.Maybe Data.ByteString.Internal.ByteString) #)
  {- Arity: 3,
     Strictness: <L,U(C(U),C(C1(U)),U(U),A,U(U),U(U,U,U),A)><L,U><L,U>,
     Unfolding: (\ conn :: Database.Redis.Core.Connection
                   shortURI :: Data.ByteString.Internal.ByteString
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Data.Pool.withResource1
                   @ (Database.Redis.ProtocolPipelining.Connection
                        Database.Redis.Protocol.Reply)
                   @ (Data.Either.Either
                        Database.Redis.Protocol.Reply
                        (GHC.Base.Maybe Data.ByteString.Internal.ByteString))
                   conn `cast` (Database.Redis.Core.NTCo:Connection[0])
                   (\ conn1 :: Database.Redis.ProtocolPipelining.Connection
                                 Database.Redis.Protocol.Reply[OneShot] ->
                    (Database.Redis.Core.sendRequest
                       @ Database.Redis.Core.Redis
                       @ (Data.Either.Either Database.Redis.Protocol.Reply)
                       @ (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                       Database.Redis.Core.$fRedisCtxRedisEither
                       Database.Redis.Commands.brpoplpush2
                         `cast`
                       (Sym (Database.Redis.Types.NTCo:RedisResult[0]
                                 <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N))
                       (GHC.Types.:
                          @ Data.ByteString.Internal.ByteString
                          Database.Redis.Commands.get1
                          (GHC.Types.:
                             @ Data.ByteString.Internal.ByteString
                             shortURI
                             (GHC.Types.[] @ Data.ByteString.Internal.ByteString))))
                      `cast`
                    (Trans
                         (Database.Redis.Core.NTCo:Redis[0] <Data.Either.Either
                                                               Database.Redis.Protocol.Reply
                                                               (GHC.Base.Maybe
                                                                  Data.ByteString.Internal.ByteString)>_N)
                         (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                              <Database.Redis.ProtocolPipelining.Connection
                                 Database.Redis.Protocol.Reply>_R
                              <GHC.Types.IO>_R
                              <Data.Either.Either
                                 Database.Redis.Protocol.Reply
                                 (GHC.Base.Maybe Data.ByteString.Internal.ByteString)>_N))
                      conn1)
                   eta) -}
3779fe249b6b552946c8a38762d988a2
  linkShorty :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ shorty :: GHC.Base.String ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n1 :: b[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n1 Main.linkShorty2)
                   (GHC.Base.augment
                      @ GHC.Types.Char
                      (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n1 :: b[OneShot] ->
                       GHC.Base.foldr @ GHC.Types.Char @ b c n1 shorty)
                      Main.linkShorty1)) -}
1d8c42322039580b4bc152e06a6bfe48
  linkShorty1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\">Copy and paste your short URL</a>"#) -}
043f1fd652fc3b21ca102efd0e0d4664
  linkShorty2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<a href=\""#) -}
46b898ec05d1cb0ff38808c56462bd93
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
2d373e93271eb30496b764d3f006cefe
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Database.Redis.Core.$wa
                        Database.Redis.Core.defaultConnectInfo5
                        Database.Redis.Core.defaultConnectInfo3
                        (GHC.Base.Nothing @ Data.ByteString.Internal.ByteString)
                        Database.Redis.Core.connect3
                        50
                        Database.Redis.Core.defaultConnectInfo1
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.NTCo:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.NTCo:NominalDiffTime[0])))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (Web.Scotty.Trans.scottyOptsT
                    @ GHC.Types.IO
                    @ Data.Text.Internal.Lazy.Text
                    @ GHC.Types.IO
                    GHC.Base.$fMonadIO
                    Control.Monad.IO.Class.$fMonadIOIO
                    Main.main2
                    (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                    (Main.app ipv1))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   ipv }) -}
369459ddb975b2b9c7b51846d0bd746a
  main2 :: Web.Scotty.Internal.Types.Options
  {- Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions3
                   Main.main3) -}
18c34d3cd7255f749eac09362716b8aa
  main3 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   Main.main4
                   Network.Wai.Handler.Warp.Settings.defaultSettings17
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings15
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Web.Scotty.Internal.Types.$fDefaultOptions2
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                     `cast`
                   (<(forall a10. GHC.Types.IO a10 -> GHC.Types.IO a10)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
8b71ec4e96ee8c6fead58422a61af9a9
  main4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3000) -}
5edd20bc21688726850e5b7d68645600
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
648c6c692a4c6a7b7a472ef4e54e326f
  randomElement :: GHC.Base.String -> GHC.Types.IO GHC.Types.Char
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.randomElement1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Types.Char>_R)) -}
cf073b984cc612af0e3752971e62c737
  randomElement1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ xs :: GHC.Base.String
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Random.$fRandomInt3
                        (Main.randomElement2,
                         case GHC.List.$wlenAcc @ GHC.Types.Char xs 0 of ww2 { DEFAULT ->
                         GHC.Types.I# (GHC.Prim.-# ww2 1) })
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.List.!! @ GHC.Types.Char xs ipv1 #) }) -}
99bdbb24ef0ce29dbb58ae44281bae30
  randomElement2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
f29d3eb20929bd0b2bbb422cae39faa3
  saveURI ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.IO
         (Data.Either.Either
            Database.Redis.Protocol.Reply Database.Redis.Types.Status)
  {- Arity: 4,
     Strictness: <L,U(C(U),C(C1(U)),U(U),A,U(U),U(U,U,U),A)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.saveURI1
                  `cast`
                (<Database.Redis.Core.Connection>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Either.Either
                                  Database.Redis.Protocol.Reply Database.Redis.Types.Status>_R)) -}
2bb3af3b8a58c642782608b9819c62b3
  saveURI1 ::
    Database.Redis.Core.Connection
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Database.Redis.Protocol.Reply Database.Redis.Types.Status #)
  {- Arity: 4,
     Strictness: <L,U(C(U),C(C1(U)),U(U),A,U(U),U(U,U,U),A)><L,U><L,U><L,U>,
     Unfolding: (\ conn :: Database.Redis.Core.Connection
                   shortURI :: Data.ByteString.Internal.ByteString
                   uri :: Data.ByteString.Internal.ByteString
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Data.Pool.withResource1
                   @ (Database.Redis.ProtocolPipelining.Connection
                        Database.Redis.Protocol.Reply)
                   @ (Data.Either.Either
                        Database.Redis.Protocol.Reply Database.Redis.Types.Status)
                   conn `cast` (Database.Redis.Core.NTCo:Connection[0])
                   (\ conn1 :: Database.Redis.ProtocolPipelining.Connection
                                 Database.Redis.Protocol.Reply[OneShot]
                      eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                    case conn1 of ww { Database.Redis.ProtocolPipelining.Conn ww1 ww2 ww3 ww4 ->
                    case Database.Redis.Protocol.renderRequest
                           (GHC.Types.:
                              @ Data.ByteString.Internal.ByteString
                              Database.Redis.Commands.set1
                              (GHC.Types.:
                                 @ Data.ByteString.Internal.ByteString
                                 shortURI
                                 (GHC.Types.:
                                    @ Data.ByteString.Internal.ByteString
                                    uri
                                    (GHC.Types.[]
                                       @ Data.ByteString.Internal.ByteString)))) of ww5 { Data.ByteString.Internal.PS ww6 ww7 ww8 ww9 ->
                    case Database.Redis.ProtocolPipelining.$wa2
                           @ Database.Redis.Protocol.Reply
                           ww1
                           ww2
                           ww3
                           ww6
                           ww7
                           ww8
                           ww9
                           eta1 of ds1 { (#,#) ipv ipv1 ->
                    (# ipv,
                       Database.Redis.Types.$fRedisResultStatus_$cdecode ipv1 #) } } })
                     `cast`
                   (<Database.Redis.ProtocolPipelining.Connection
                       Database.Redis.Protocol.Reply>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0]
                                  <Data.Either.Either
                                     Database.Redis.Protocol.Reply Database.Redis.Types.Status>_R))
                   eta) -}
fdf5b36d8fe17e404c851aadaee0c641
  shortyAintUri ::
    Data.Text.Internal.Lazy.Text -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ uri :: Data.Text.Internal.Lazy.Text ->
                 Main.shortyAintUri_go29 uri Main.shortyAintUri1) -}
dc5118e4dcb47f5462d099059f831b35
  shortyAintUri1 :: [Data.Text.Internal.Lazy.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Lazy.Text
                   Main.shortyAintUri2
                   (GHC.Types.[] @ Data.Text.Internal.Lazy.Text)) -}
04447d56767b9d5120716de70267fa6a
  shortyAintUri2 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString#
                   " wasn't a url, did you forget http://?"#) -}
dd5517155a63efc8f995c3bb1ec1292e
  shortyAintUri_go29 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
37c4ba3d6daa0583afc6ce119e9724e4
  shortyCreated ::
    GHC.Show.Show a =>
    a -> GHC.Base.String -> Data.Text.Internal.Lazy.Text
  {- Arity: 3, Strictness: <S(LC(S)L),1*U(A,1*C1(U),A)><L,U><L,1*U>,
     Unfolding: (\ @ a10
                   $dShow :: GHC.Show.Show a10
                   resp :: a10
                   shawty :: GHC.Base.String ->
                 case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        (GHC.Show.show @ a10 $dShow resp) of dt { DEFAULT ->
                 Main.shortyCreated_go1
                   (Main.shortyCreated_outer4 dt)
                   (GHC.Types.:
                      @ Data.Text.Internal.Lazy.Text
                      Main.shortyCreated1
                      (GHC.Types.:
                         @ Data.Text.Internal.Lazy.Text
                         (case GHC.Base.map
                                 @ GHC.Types.Char
                                 @ GHC.Types.Char
                                 Data.Text.Internal.safe
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    Main.linkShorty2
                                    (GHC.Base.++
                                       @ GHC.Types.Char
                                       shawty
                                       Main.linkShorty1)) of dt1 { DEFAULT ->
                          Main.shortyCreated_outer3 dt1 })
                         (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) }) -}
8dd0b9f60843ca0454a4276abc17ff67
  shortyCreated1 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# " shorty is: "#) -}
a02f2c6e514991c35d7aee9abde13430
  shortyCreated_$sshortyCreated ::
    Data.Either.Either
      Database.Redis.Protocol.Reply Database.Redis.Types.Status
    -> GHC.Base.String -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ resp :: Data.Either.Either
                             Database.Redis.Protocol.Reply Database.Redis.Types.Status
                   shawty :: GHC.Base.String ->
                 let {
                   a10 :: Data.Text.Internal.Lazy.Text
                   = case GHC.Base.map
                            @ GHC.Types.Char
                            @ GHC.Types.Char
                            Data.Text.Internal.safe
                            (GHC.Base.++
                               @ GHC.Types.Char
                               Main.linkShorty2
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  shawty
                                  Main.linkShorty1)) of dt { DEFAULT ->
                     Main.shortyCreated_outer2 dt }
                 } in
                 case resp of wild {
                   Data.Either.Left b1
                   -> case GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             Data.Text.Internal.safe
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Data.Either.$fShowEither3
                                (Database.Redis.Protocol.$w$cshowsPrec
                                   11
                                   b1
                                   (GHC.Types.[] @ GHC.Types.Char))) of dt { DEFAULT ->
                      Main.shortyCreated_go29
                        (Main.shortyCreated_outer1 dt)
                        (GHC.Types.:
                           @ Data.Text.Internal.Lazy.Text
                           Main.shortyCreated1
                           (GHC.Types.:
                              @ Data.Text.Internal.Lazy.Text
                              a10
                              (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) }
                   Data.Either.Right b1
                   -> case GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             Data.Text.Internal.safe
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Data.Either.$fShowEither2
                                (Database.Redis.Types.$fShowStatus_$cshowsPrec
                                   Data.Either.$fReadEither5
                                   b1
                                   (GHC.Types.[] @ GHC.Types.Char))) of dt { DEFAULT ->
                      Main.shortyCreated_go29
                        (Main.shortyCreated_outer dt)
                        (GHC.Types.:
                           @ Data.Text.Internal.Lazy.Text
                           Main.shortyCreated1
                           (GHC.Types.:
                              @ Data.Text.Internal.Lazy.Text
                              a10
                              (GHC.Types.[] @ Data.Text.Internal.Lazy.Text))) } }) -}
5ea968df21162b65d0c0a3f1591adad7
  shortyCreated_go1 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
1579ff3274fa16c6551fc61e9b3f2f8e
  shortyCreated_go29 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
9cf1e538d2cff0ed67706378f7d4ff4a
  shortyCreated_outer ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
ae5e315446915d3aa8d7796f32125084
  shortyCreated_outer1 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
582d1f21f000cc64c1e15e04b5d686e7
  shortyCreated_outer2 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
05ec218cb3fe7931d0e0c573366cb736
  shortyCreated_outer3 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
b5cc64521ea2566980c7a066e711a3bf
  shortyCreated_outer4 ::
    [GHC.Types.Char] -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <S,1*U> -}
7e13091463ecf1815534757bad60da2a
  shortyFound ::
    Data.Text.Internal.Lazy.Text -> Data.Text.Internal.Lazy.Text
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ tbs :: Data.Text.Internal.Lazy.Text ->
                 Main.shortyFound_go29
                   Main.shortyFound4
                   (GHC.Types.:
                      @ Data.Text.Internal.Lazy.Text
                      tbs
                      (GHC.Types.:
                         @ Data.Text.Internal.Lazy.Text
                         Main.shortyFound3
                         (GHC.Types.:
                            @ Data.Text.Internal.Lazy.Text
                            tbs
                            Main.shortyFound1)))) -}
0f8a6c8dd44d6ffdb7b0af404cc8193e
  shortyFound1 :: [Data.Text.Internal.Lazy.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Lazy.Text
                   Main.shortyFound2
                   (GHC.Types.[] @ Data.Text.Internal.Lazy.Text)) -}
8a581265d408fd122ba019079b27e840
  shortyFound2 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "</a>"#) -}
e9a54a2a26e5c3f3fbe769820560bae5
  shortyFound3 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "\">"#) -}
f5d2bd6787b24ccd23f419bdc0fde0e8
  shortyFound4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "<a href=\""#) -}
7163e771978c73e17f051da4702eb24f
  shortyFound_go29 ::
    Data.Text.Internal.Lazy.Text
    -> [Data.Text.Internal.Lazy.Text] -> Data.Text.Internal.Lazy.Text
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
1aafa3d248098fb036fd4305b74b00c2
  shortyGen :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.shortyGen1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <[GHC.Types.Char]>_R)) -}
3bf168fea5e4b7967ae7c6bc91dfff09
  shortyGen1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Control.Monad.replicateM3 @ GHC.Types.Char Main.shortyGen2 eta) -}
780fa219f87c9ce77e6acb8f34e0f4e6
  shortyGen2 :: [GHC.Types.IO GHC.Types.Char]
  {- Unfolding: (Main.$wxs 7) -}
"SPEC shortyCreated @ (Either Reply Status)" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                         (Data.Either.Either
                                                                            Database.Redis.Protocol.Reply
                                                                            Database.Redis.Types.Status)
  Main.shortyCreated @ (Data.Either.Either
                          Database.Redis.Protocol.Reply Database.Redis.Types.Status)
                     $dShow
  = Main.shortyCreated_$sshortyCreated
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

